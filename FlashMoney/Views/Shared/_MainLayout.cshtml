<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>FCMB: Flash Money - Overview</title>

    <link rel="shortcut icon" href="~/assets/img/png/fav-icon.png" type="image/x-icon" />

    <link href="https://fonts.googleapis.com/css?family=Work+Sans:400,500,600,700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="~/assets/components/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="~/assets/components/animate/animate.css" />
    <link rel="stylesheet" href="~/assets/components/loadawesome/loaders.css" />
    <link rel="stylesheet" href="~/assets/components/slick/slick.css">
    <link rel="stylesheet" href="~/assets/css/style.min.css" />
    <!--<link rel="stylesheet" href="~/assets/components/owl-carousel/assets/owl.carousel.min.css" />
    <link rel="stylesheet" href="~/assets/components/owl-carousel/assets/owl.theme.default.min.css" />-->
    <link href="~/css/flash.css" rel="stylesheet" />
    <script src="https://js.paystack.co/v2/paystack.js"></script>
</head>

<body class="page admin">

    <nav class="sidebar">
        <div class="logo">
            <img src="~/assets/img/svg/logo-icon.svg" />
        </div>

        @RenderSection("NAV", required: true)

        @*<div class="content">
                <ul>
                    <li class="active">
                        <a asp-action="Index" asp-controller="Home">
                            <i class="icon">
                                <svg width="24" height="25" viewBox="0 0 24 25" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g opacity="0.3">
                                        <path d="M9 13.2002H15V19.2002H18V10.1767L12 5.69627L6 10.1767V19.2002H9V13.2002ZM3.98438 21.2002V9.20019L12 3.2002L20.0156 9.20019V21.2002H3.98438Z"
                                              fill="#2F1343" />
                                    </g>
                                </svg>
                            </i>
                            <span>Overview</span>
                        </a>
                    </li>
                    <li>
                        <a asp-action="Index" asp-controller="History">
                            <i class="icon">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g opacity="0.3">
                                        <path d="M13.0008 2.0293V2.0493V4.0493C17.3908 4.5893 20.5008 8.5793 19.9608 12.9693C19.5008 16.6093 16.6408 19.4993 13.0008 19.9293V21.9293C18.5008 21.3793 22.5008 16.4993 21.9508 10.9993C21.5008 6.2493 17.7308 2.4993 13.0008 2.0293ZM11.0008 2.0593C9.05078 2.2493 7.19078 2.9993 5.67078 4.2593L7.10078 5.7393C8.22078 4.8393 9.57078 4.2593 11.0008 4.0593V2.0593ZM4.26078 5.6693C3.00078 7.1893 2.25078 9.03929 2.05078 10.9993H4.05078C4.24078 9.57929 4.80078 8.22929 5.69078 7.09929L4.26078 5.6693ZM2.06078 12.9993C2.26078 14.9593 3.03078 16.8093 4.27078 18.3293L5.69078 16.8993C4.81078 15.7693 4.24078 14.4193 4.06078 12.9993H2.06078ZM7.10078 18.3693L5.67078 19.7393C7.18078 20.9993 9.04078 21.7893 11.0008 21.9993V19.9993C9.58078 19.8193 8.23078 19.2493 7.10078 18.3693ZM12.5008 6.9993V12.2493L17.0008 14.9193L16.2508 16.1493L11.0008 12.9993V6.9993H12.5008Z"
                                              fill="#2F1343" />
                                    </g>
                                </svg>
                            </i>
                            <span>History</span>
                        </a>
                    </li>
                    <li>
                        <a asp-action="Index" asp-controller="Card">
                            <i class="icon">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g opacity="0.3">
                                        <path d="M20.9989 7.9995V5.9995L6.99915 5.99902V7.99902L20.9989 7.9995ZM20.9991 15.999L20.9988 10.9998L6.99902 10.9993L6.99939 15.9985L20.9991 15.999ZM20.9989 3.99951C22.1039 3.99951 22.9989 4.89347 22.9989 5.99951L22.9991 15.999C22.9991 17.1051 22.1042 17.999 20.9991 17.999L6.99939 17.9985C5.89437 17.9985 4.99939 17.1046 4.99939 15.9985L5.00915 5.99902C5.00915 4.89298 5.89412 3.99902 6.99915 3.99902L20.9989 3.99951ZM3 20.0005H18V22.0005L3.00024 22C1.89522 22 1.00024 21.106 1.00024 20L1 9.00048H3V20.0005Z"
                                              fill="#2F1343" />
                                    </g>
                                </svg>
                            </i>
                            <span>Cards</span>
                        </a>
                    </li>
                    <li>
                        <a asp-action="Index" asp-controller="Settings">
                            <i class="icon">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <g opacity="0.3">
                                        <path d="M12.0003 8.00048C14.2094 8.00048 16.0003 9.79134 16.0003 12.0005C16.0003 14.2096 14.2094 16.0005 12.0003 16.0005C9.79115 16.0005 8.00029 14.2096 8.00029 12.0005C8.00029 9.79134 9.79115 8.00048 12.0003 8.00048ZM12.0003 10.0005C10.8957 10.0005 10.0003 10.8959 10.0003 12.0005C10.0003 13.1051 10.8957 14.0005 12.0003 14.0005C13.1049 14.0005 14.0003 13.1051 14.0003 12.0005C14.0003 10.8959 13.1049 10.0005 12.0003 10.0005ZM9.99967 21.9985C9.74967 21.9985 9.54369 21.8156 9.5057 21.5775L9.1307 18.9276C8.52169 18.6755 7.95667 18.3405 7.44068 17.9445L4.95166 18.9475C4.72569 19.0345 4.46367 18.9465 4.33969 18.7306L2.33969 15.2665C2.21469 15.0505 2.26966 14.7805 2.45769 14.6276L4.56969 12.9745L4.49968 11.9985L4.56969 11.0226L2.45769 9.36848C2.26966 9.21655 2.21469 8.94653 2.33969 8.73054L4.33969 5.26652C4.46367 5.05053 4.72569 4.96256 4.95166 5.04955L7.43968 6.05257C7.95567 5.65657 8.52067 5.32153 9.1307 5.06852L9.5057 2.4196C9.54369 2.18148 9.74967 1.99854 9.99967 1.99854L14.0009 2.00049C14.2509 2.00049 14.4569 2.18344 14.4949 2.42155L14.8699 5.07047C15.4799 5.32348 16.0449 5.65852 16.5609 6.05452L19.0489 5.05151C19.2749 4.96451 19.5369 5.05248 19.6609 5.26846L21.6609 8.73249C21.7859 8.94848 21.7309 9.2185 21.5429 9.37043L19.4309 11.0245L19.5009 12.0005L19.4309 12.9765L21.5429 14.6296C21.7309 14.7825 21.7859 15.0525 21.6609 15.2685L19.6609 18.7325C19.5369 18.9485 19.2749 19.0365 19.0489 18.9495L16.5599 17.9465C16.0439 18.3425 15.4789 18.6775 14.8699 18.9295L14.4949 21.5794C14.4569 21.8176 14.2509 22.0005 14.0009 22.0005L9.99967 21.9985ZM11.2503 4.0005L10.8843 6.61377C9.68292 6.86137 8.62463 7.50078 7.84895 8.39254L5.43814 7.35242L4.68814 8.65146L6.80101 10.2029C6.39926 11.3677 6.40005 12.6406 6.80337 13.8049L4.68493 15.3609L5.43493 16.6599L7.85559 15.6161C8.62862 16.5015 9.68077 17.137 10.8748 17.3853L11.2439 20.0174L12.7567 20.0194L13.1258 17.3872C14.3198 17.1389 15.372 16.5034 16.145 15.618L18.5657 16.6619L19.3157 15.3628L17.1972 13.8069C17.6005 12.6425 17.6013 11.3697 17.1996 10.2049L19.3124 8.65341L18.5624 7.35437L16.1516 8.39448C15.3759 7.50273 14.3177 6.86332 13.1163 6.61572L12.7503 4.00245L11.2503 4.0005Z"
                                              fill="#2F1343" />
                                    </g>
                                </svg>

                            </i>
                            <span>Settings</span>
                        </a>
                    </li>
                </ul>
            </div>*@
    </nav>

    <main class="main">
        <header class="header">
            <div class="left">
                <a href="#" class="icon open-trigger">
                    <i class="icon auto">
                        <svg width="16" height="10" viewBox="0 0 16 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M0.5 0H15.5V1.66667H0.5V0ZM0.5 4.16667H15.5V5.83333H0.5V4.16667ZM0.5 8.33333H15.5V10H0.5V8.33333Z"
                                  fill="#101010" />
                        </svg>
                    </i>
                </a>
                <h2>@ViewData["Header"]</h2>
            </div>
            <div class="right">
                @*<div class="action">
                        <a href="notifications.html" class="not-icon badged">
                            <i class="icon">
                                <svg width="20" height="19" viewBox="0 0 20 19" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path d="M17.5007 14.8334V15.6667H2.50068V14.8334L4.16735 13.1667V8.16675C4.16669 5.5865 5.86129 3.31233 8.33402 2.57508C8.32992 2.49458 8.32992 2.41391 8.33402 2.33341C8.33402 1.41291 9.08018 0.666748 10.0007 0.666748C10.9212 0.666748 11.6673 1.41291 11.6673 2.33341C11.6714 2.41391 11.6714 2.49458 11.6673 2.57508C14.1401 3.31233 15.8347 5.5865 15.834 8.16675V13.1667L17.5007 14.8334ZM11.6673 16.5001C11.6673 17.4206 10.9212 18.1667 10.0007 18.1667C9.08018 18.1667 8.33402 17.4206 8.33402 16.5001H11.6673ZM16.459 1.65841L15.2757 2.84175C16.6979 4.24891 17.4989 6.166 17.5007 8.16675H19.1673C19.1738 5.72191 18.1979 3.37691 16.459 1.65841ZM0.834016 8.16675H2.50068C2.50241 6.166 3.30345 4.24891 4.72568 2.84175L3.54235 1.65841C1.80342 3.37691 0.827597 5.72191 0.834016 8.16675Z"
                                          fill="#101010" />
                                </svg>
                            </i>
                        </a>
                    </div>*@

                <div class="action dropdown">
                    <a class="btn dropdown-toggle" id="profile-menu" data-toggle="dropdown" aria-haspopup="true"
                       aria-expanded="false">
                        @*<img src="~/assets/img/png/avatar2.png" height="30" />*@

                        @if (User.Claims.FirstOrDefault(p => p.Type == "passport") != null)
                        {

                            var passportstring = User.Claims.FirstOrDefault(p => p.Type == "passport").Value;

                            <img src="@passportstring" height="30" />
                            <input type="hidden" class="passporturl" value="@passportstring" />

                        }
                        else
                        {
                            <img src="~/assets/img/png/avatar2.png" height="30" />
                        }

                        <p>
                            <strong>@User.Claims.FirstOrDefault(p => p.Type == "fullname").Value</strong>
                            @if (User.Claims.FirstOrDefault(p => p.Type == "email") != null)
                            {
                                <span>@User.Claims.FirstOrDefault(p => p.Type == "email").Value</span>
                            }

                        </p>
                        <i class="icon">
                            <svg width="14" height="4" viewBox="0 0 14 4" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                                <path d="M10.334 1.99992C10.334 1.07942 11.0801 0.333252 12.0007 0.333252C12.9212 0.333252 13.6673 1.07942 13.6673 1.99992C13.6673 2.92042 12.9212 3.66658 12.0007 3.66658C11.0801 3.66658 10.334 2.92042 10.334 1.99992ZM5.33398 1.99992C5.33398 1.07942 6.08015 0.333252 7.00065 0.333252C7.92115 0.333252 8.66732 1.07942 8.66732 1.99992C8.66732 2.92042 7.92115 3.66658 7.00065 3.66658C6.08015 3.66658 5.33398 2.92042 5.33398 1.99992ZM0.333984 1.99992C0.333984 1.07942 1.08018 0.333252 2.00065 0.333252C2.92113 0.333252 3.66732 1.07942 3.66732 1.99992C3.66732 2.92042 2.92113 3.66658 2.00065 3.66658C1.08018 3.66658 0.333984 2.92042 0.333984 1.99992Z"
                                      fill="#101010" />
                            </svg>

                        </i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="profile-menu">
                        <a class="dropdown-item" asp-action="Index" asp-controller="Settings">
                            <i class="icon">
                                <svg width="16" height="15" viewBox="0 0 16 15" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path d="M15.083 8.12492L14.2497 8.95825L12.5413 7.24992L13.3747 6.41659C13.5529 6.24192 13.8381 6.24192 14.0163 6.41659L15.083 7.48325C15.2577 7.6615 15.2577 7.94667 15.083 8.12492ZM6.99967 12.7833L12.0497 7.73325L13.758 9.44159L8.71634 14.4999H6.99967V12.7833ZM6.99967 8.66658C3.31634 8.66658 0.333008 10.1583 0.333008 11.9999V13.6666H5.33301V12.0916L8.66634 8.75825C8.11367 8.68833 7.55667 8.65775 6.99967 8.66658ZM6.99967 0.333252C5.15872 0.333252 3.66634 1.82567 3.66634 3.66659C3.66634 5.5075 5.15872 6.99992 6.99967 6.99992C8.84059 6.99992 10.333 5.5075 10.333 3.66659C10.333 1.82567 8.84059 0.333252 6.99967 0.333252Z"
                                          fill="#101010" />
                                </svg>
                            </i>
                            <span>Edit Profile</span>
                        </a>
                        <a class="dropdown-item logout" asp-action="Logout" asp-controller="Auth">
                            <i class="icon">
                                <svg width="14" height="15" viewBox="0 0 14 15" fill="none"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path d="M10.7997 2.53332L9.59134 3.74166C11.033 4.61666 11.9997 6.19166 11.9997 7.99999C11.9997 10.7583 9.75801 13 6.99967 13C4.24134 13 1.99967 10.7583 1.99967 7.99999C1.99967 6.19166 2.96634 4.61666 4.39967 3.73333L3.19967 2.53332C1.46634 3.73333 0.333008 5.73333 0.333008 7.99999C0.333008 11.6833 3.31634 14.6667 6.99967 14.6667C10.683 14.6667 13.6663 11.6833 13.6663 7.99999C13.6663 5.73333 12.533 3.73333 10.7997 2.53332ZM7.83301 0.5H6.16634V8.83333H7.83301"
                                          fill="#FF7070" />
                                </svg>
                            </i>
                            <span>Logout</span>
                        </a>
                    </div>
                </div>
            </div>
        </header>

        @RenderBody()
    </main>


    <!-- Modals -->
    <section class="modals">
        @RenderSection("Modals", required: false);
        <!-- Modal: Catch all Ajax Errors -->
        <div class="modal fade" id="modal-catch-errors" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content m-content-wrap">
                    <div class="card form-card">
                        <!-- Loading  -->
                        <div class="form-section loading">
                            <div class="la-ball-pulse">
                                <div></div>
                                <div></div>
                                <div></div>
                            </div>
                        </div>

                        <!-- Error -->
                        <div class="form-section alert sub error active">
                            <div class="head">
                                <h4>Error</h4>
                            </div>
                            <img src="~/assets/img/png/alert-error.png" class="error-img" />

                            <h3>Error Occured!</h3><br /><br />
                            <p class="errorWrap">Reason: <span class="errorText"></span></p>
                            <a class="btn btn-primary" asp-action="Index" asp-controller="Home">Continue</a>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="stack d-none">
        @{
            var email = User.Claims.FirstOrDefault(p => p.Type == "phone").Value + "@fcmbeasypay.com";
            if (User.Claims.FirstOrDefault(p => p.Type == "email") != null)
            {
                var tempEmail = User.Claims.FirstOrDefault(p => p.Type == "email").Value;
                if (!string.IsNullOrEmpty(email))
                {
                    email = tempEmail;
                }

            }
            string reference = Guid.NewGuid().ToString();
        }
        <span class="email">@email</span>
        <span class="reference">@reference</span>
    </section>

    @RenderSection("Scripts", required: false);
    <script src="~/assets/components/jquery/jquery.min.js"></script>
    <script src="~/assets/components/popper/popper.min.js"></script>
    <script src="~/assets/components/bootstrap/bootstrap.min.js"></script>
    <script src="~/assets/components/slick/slick.min.js"></script>
    <script src="~/assets/components/cleave/cleave.min.js"></script>
    <script src="~/assets/components/owl-carousel/owl.carousel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script src="~/assets/js/scripts.min.js"></script>
    <script>
            var timeInSecondsAfterSessionOut = 300; // change this to change session time out (in seconds).
            var secondTick = 0;
        jQuery(document).ready(function () {
                //Listen to click/key events to reset the session timeout
                $("body").on('click keypress', function () {
                    ResetThisSession();
                });
            var baseUrl = "@Url.Action("Paystackresponse", "Wallet", new { reference = "" }, "https")" + "?reference=";
            var starturl = "@Url.Action("AddCardInitiated", "Wallet", new {}, "https")" + "?reference=";
            var stopFrameLoading = false;
            //"https://localhost:44380/Wallet/Paystackresponse?reference=";
            //"https://localhost:44380/Wallet/AddCardInitiated?reference=";
            $('.modal-content').on('keyup', '#cc-form .credit-card', function (e) {

                //console.log("in credit:"+$(this).val());
                var number = $(this).val().replace(/\s+/g, '');
                var type = validateCreditCardNumber(number);
                //console.log("in credit:"+type);
                if (type == 'visa' || type == 'master') {
                    //console.log("in credit");
                    $(this).siblings('.credit-card-type').attr('src', '/assets/img/png/card-' + type + '.png');
                    $('.form-section .card-type-processing').attr('src', '/assets/img/png/card-' + type + '.png');
                } else {
                    $(this).siblings('.credit-card-type').attr('src', '/assets/img/png/nocard.png');
                    $('.form-section .card-type-processing').attr('src', '/assets/img/png/nocard.png');
                }
            });

            $('.modal-content').on('click', '#cc-form .form-link-next', function (e) {

                $('.cc-form-errors').text("");
                $('.cc-form-errors').addClass('hidden');
                var nform = $('#cc-form');
                var expiry = nform.find('input[name=expiry]').val();
                var cvv = nform.find('input[name=cvv]').val();
                var number = nform.find('input[name=number]').val().replace(/\s+/g, '');
                if (number.length < 16 || number.length > 19) {
                    $('.cc-form-errors').html("Card Number is invalid.<br/>");
                    $('.cc-form-errors').removeClass('hidden');
                    return false;
                }
                if (expiry.length < 5 || expiry.length > 7 || !expiry.includes('/')) {
                    console.log('we dey expiry length');
                    $('.cc-form-errors').html("Expiry date is invalid, MM/YY or MM/YYYY format expected.<br/>");
                    $('.cc-form-errors').removeClass('hidden');
                    return false;
                }
                var date = expiry.split('/');
                var month = date[0];
                var year = date[1];

                var currentYearAbbrv = new Date().getFullYear().toString().substr(-2);
                var currentYear = new Date().getFullYear();
                var currentMonth = new Date().getMonth() + 1;
                if (month.length != 2 || (parseInt(month) < 1 || parseInt(month) > 12) || (year.length != 2 && year.length != 4) && (parseInt(year) >= parseInt(currentYearAbbrv) || parseInt(year) >= currentYear)) {
                    //console.log('we dey month length');
                    $('.cc-form-errors').text("Expiry date is invalid, MM/YY or MM/YYYY format expected");
                    $('.cc-form-errors').removeClass('hidden');
                    return false;
                }
                //Validation or expiry
                if (((parseInt(month) < currentMonth) && ((year.length == 2 && parseInt(year) <= parseInt(currentYearAbbrv)) || (year.length == 4 && parseInt(year) >= parseInt(currentYear)))) || (year.length == 2 && parseInt(year) < parseInt(currentYearAbbrv)) || (year.length == 4 && parseInt(year) < parseInt(currentYear))) {
                    //console.log('we dey month length');
                    debugger
                    $('.cc-form-errors').text("Expiry date is invalid, date is in the past");
                    $('.cc-form-errors').removeClass('hidden');
                    return false;
                }
                //debugger
                if (cvv.length != 3) {
                    $('.cc-form-errors').html("CVV is invalid.<br/>");
                    $('.cc-form-errors').removeClass('hidden');
                    return false;
                }
                $('.form-section .expiry-dd').text(expiry);
                $('.form-section .last-four').text(number.substr(-4));


                $(".form-section").removeClass('active');
                $(".form-section.card-pin").addClass('active');
            });
            $('.modals .modal-content').on('click', '#cc-form .form-link-card', async function (e) {
                //debugger
                //console.log('we dey here');
                e.preventDefault();
                e.stopImmediatePropagation();
                //console.log('we dey here');

                try {
                    var nform = $('#cc-form');
                    $('.cc-form-errors').text("");
                    $('.cc-form-errors').addClass('hidden');
                    if (!nform.find('input[name=pin1]').val() || !nform.find('input[name=pin2]').val() || !nform.find('input[name=pin3]').val() || !nform.find('input[name=pin4]').val()) {
                        $('.cc-form-errors').html("PIN must be 4 digits.<br/>");
                        $('.cc-form-errors').removeClass('hidden');
                        return false;
                    }
                    showLoading(true);

                    var pin = nform.find('input[name=pin1]').val() + nform.find('input[name=pin2]').val() + nform.find('input[name=pin3]').val() + nform.find('input[name=pin4]').val();
                    var email = $('section.stack span.email').text();
                    var reference = $('section.stack span.reference').text(); //Date.now() + Math.floor(Math.random() * 263);// this reference should be generated on page load, you can use uuid, but make sure its unique
                    //debugger
                    var url1 = starturl + reference;
                    await processResponseAsync(url1);
                    //debugger
                    var t_amount_string = $('.total_amount .outter_total_charge .total_charge').text();
                    var t_amount = parseInt(t_amount_string) * 100;
                    if (!isNaN(t_amount) && t_amount >= 120) {
                        var transactionData = {
                            email: email,
                            amount: t_amount,
                            // key: "pk_test_29e3eb79334d9b0b5150bcb26d28970542d51424",
                            key: "pk_live_5e4c11e3f3414dd8b4939fe18e7f01c8a308415b",
                            ref: reference
                        };

                        var transaction = await Paystack.Transaction.request(transactionData);
                        //debugger
                        //console.log(transaction);
                        var expiry = nform.find('input[name=expiry]').val();
                        var date = expiry.split('/');
                        var month = date[0];
                        var year = date[1];
                        console.log('expiry: ' + expiry);


                        var card = {
                            number: nform.find('input[name=number]').val().replace(/\s+/g, ''),
                            cvv: nform.find('input[name=cvv]').val(),
                            month: month,
                            year: year,
                            pin: pin
                        };

                        var validation = Paystack.Card.validate(card);

                        // validate card
                        if (validation.isValid) {
                            await transaction.setCard(card);
                            var chargeResponse = await transaction.chargeCard();
                            //console.log(chargeResponse);
                            // Handle the charge responses

                            if (chargeResponse.status === "success") {
                                emptySensitiveFields();
                                showLoading(false);
                                showSuccess(true);
                                var url = baseUrl + reference;
                                processResponse(url);
                            }
                            // Another charge response example
                            else if (chargeResponse.status === "auth") {
                                emptySensitiveFields();
                                if (chargeResponse.data.auth === "pin") {
                                    //showLoading(true);
                                    const authenticationResponse = await transaction.card.authenticate(pin);
                                    showLoading(false);
                                    var url = baseUrl + reference;
                                    if (authenticationResponse.status === "success") {

                                        showSuccess(true);
                                    } else {
                                        showSuccess(false, authenticationResponse.message);
                                    }
                                    processResponse(url);
                                }
                                else if (chargeResponse.data.auth === "3DS") {
                                    /*await transaction.listenFor3DSCharge().then(function(response){
                                        console.log('3DS trans response');
                                      console.log(response);
                                    }, function(error){
                                        console.log('3DS trans error');
                                      console.log(error);
                                    });*/
                                    //console.log(chargeResponse.data);
                                    //window.location.href = chargeResponse.message;
                                    $('#iframe-3ds').attr('src', chargeResponse.message);


                                }
                                else if (chargeResponse.data.auth === "otp") {
                                    //const token = 803284;
                                    var token = await getCode();
                                    console.log(token);
                                    //showLoading(true);
                                    const authenticationResponse = await transaction.authenticateCard(token);
                                    showLoading(false);
                                    var url = baseUrl + reference;
                                    if (authenticationResponse.status === "success") {
                                        showSuccess(true);
                                    } else {
                                        showSuccess(false, authenticationResponse.message);
                                    }
                                    processResponse(url);
                                }

                            }
                            else if (chargeResponse.status === false) {
                                emptySensitiveFields();
                                //console.log("i dey here:" + chargeResponse.message);
                                showLoading(false);
                                showSuccess(false, chargeResponse.message);
                                var url = baseUrl + reference + "&message=" + chargeResponse.message;
                                processResponse(url);
                            } else {
                                emptySensitiveFields();
                                showLoading(false);
                                showSuccess(false, chargeResponse.message);
                                var url = baseUrl + reference + "&message=" + chargeResponse.message;
                                processResponse(url);
                            }
                        } else {
                            emptySensitiveFields();
                            //console.log("transaction:" + err.message);
                            var message = "Invalid Card / Unknown Error, kindly try again.";
                            showLoading(false);
                            showSuccess(false, message);
                            var url = baseUrl + reference + "&status=fail&message=" + message;
                            processResponse(url);
                        }
                    } else {
                        var message = "Amount Invalid, kindly try again.";
                        showLoading(false);
                        showSuccess(false, message);
                        var url = baseUrl + reference + "&status=fail&message=" + message;
                        processResponse(url);
                    }
                } catch (err) {
                    emptySensitiveFields();
                    console.log("transaction:" + err.message);
                    showLoading(false);
                    showSuccess(false, err.message);
                    var url = baseUrl + reference + "&status=fail&message=" + err.message;
                    processResponse(url);
                }
                emptySensitiveFields();
            });
            $('#iframe-3ds').on('load', function () {
                if (!stopFrameLoading) {
                    showLoading(false);
                    $(".form-section").removeClass('active');
                    $(".form-section.card-3ds").addClass('active');
                }
            });
            window.addEventListener("message", receiveMessage, false);

            function receiveMessage(event) {
                if (event.origin !== "https://standard.paystack.co")
                    return;
                var payload = event.data;
                var json = payload.replace("PaystackAuth ", "");
                var ndata = JSON.parse(json);
                if (ndata.trxref) {
                    stopFrameLoading = true;
                    var reference = ndata.trxref;
                    if (ndata.status === "success") {
                        showSuccess(true);
                    } else {
                        showSuccess(false, ndata.message);
                    }
                    var url = baseUrl + reference;
                    processResponse(url);
                }
            }
            function emptySensitiveFields() {
                var nform = $('#cc-form');
                var tform = $('#get-otp');
                nform.find('input[type="text"],input[type="password"]').val('');
                tform.find('input[type="text"],input[type="password"]').val('');
            }
            function showLoading(status) {
                $('.modal-content .form-card .form-section').removeClass("active");
                if (status) {
                    $('.modal-content .form-card .form-section.loading').addClass("active");
                }
            }
            function showSuccess(status, message) {
                var type = 'success';
                if (!status) {
                    type = 'error';
                }
                $('.modal-content .form-card .form-section').removeClass("active");

                $('.modal-content .form-card .form-section.alert.sub.' + type).addClass("active");
                if (message != null) {
                    $('.modal-content .form-card .form-section.alert.sub.' + type + ' .fail-message').text(message);
                }

            }
            function processResponse(url) {
                //debugger
                $.get(url, function (data) {
                    //You can put any code that needs to be executed after confirmation from server here
                    /*if(data.status == "success"){
                        showSuccess(true);
                    }else{
                        showSuccess(false, data.message);
                    }*/
                });
            }
            async function processResponseAsync(url) {
                return Promise.resolve($.get(url));
            }
            async function getCode() {
                $('.form-section').removeClass('active');
                $('.form-section.card-otp').addClass('active');
                return new Promise(function (resolve, reject) {
                    $(document).on('click', '#save-code', function (e) {
                        var nform = $('#get-otp');
                        if (nform.find('input[name=otp1]').val() && nform.find('input[name=otp2]').val() && nform.find('input[name=otp3]').val() && nform.find('input[name=otp4]').val() && nform.find('input[name=otp5]').val() && nform.find('input[name=otp6]').val()) {
                            var code = nform.find('input[name=otp1]').val() + nform.find('input[name=otp2]').val() + nform.find('input[name=otp3]').val() + nform.find('input[name=otp4]').val() + nform.find('input[name=otp5]').val() + nform.find('input[name=otp6]').val();
                            resolve(code);
                        }
                    });
                });
            }

            /*function doInputDialog() {
                var def = $.Deferred();
                bootbox.prompt({
                    title: "Enter your Token",
                    inputType: 'password',
                    callback: def.resolve
                });

                return def.promise().then(function (result) {
                    return result;
                });
            }*/


(function () {
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        connection.start().then(function () {
            console.log("connected");

            connection.invoke('getConnectionId')
                .then(function (connectionId) {
                    sessionStorage.setItem('conectionId', connectionId);
                    // Send the connectionId to controller
                }).catch(err => console.error(err.toString()));;


        });

        $("#sendmessage").click(function () {
            var connectionId = sessionStorage.getItem('conectionId');
            connection.invoke("SendMessage", connectionId);
        });

    connection.on("Notify", function (message) {

        console.log(message);
        if (message == "Logout") {
            $.get("/Auth/Logout", function (data) {
                location.reload();
            });
        } else if (message == "NewUser") {
            location.reload();
        }
    });



    })();

            function validateCreditCardNumber(ccNum) {

                var visaPattern = /^(?:4[0-9]{12}(?:[0-9]{3})?)$/;
                var mastPattern = /^(?:5[1-5][0-9]{14})$/;
                var amexPattern = /^(?:3[47][0-9]{13})$/;
                var discPattern = /^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/;

                //var ccNum  = document.getElementById("cardNum").value;

                var isVisa = visaPattern.test(ccNum) === true;
                var isMast = mastPattern.test(ccNum) === true;
                var isAmex = amexPattern.test(ccNum) === true;
                var isDisc = discPattern.test(ccNum) === true;

                if (isVisa) {
                    return 'visa';
                }
                else if (isMast) {
                    return 'master';
                }
                else if (isAmex) {
                    return 'amex';
                }
                else if (isDisc) {
                    return 'disc';
                }
                else {
                    return 'nocard';
                }
            }
        });
        function ResetThisSession() {
            secondTick = 0;
        }

        function StartThisSessionTimer() {
            secondTick++;
            /*var timeLeft = ((timeInSecondsAfterSessionOut - secondTick) / 60).toFixed(0); // in minutes
            if (secondTick <= 30) {
                timeLeft = timeInSecondsAfterSessionOut - secondTick; // override, we have 30 secs only
            }*/

            //$("#spanTimeLeft").html(timeLeft);

            if (secondTick > timeInSecondsAfterSessionOut) {
                clearTimeout(tick);
                //window.location = "/Auth/Logout";
                location.reload(true);
                return;
            }
            tick = setTimeout("StartThisSessionTimer()", 1000);
        }

        // Start the session timer
        StartThisSessionTimer();
    </script>
</body>

</html>